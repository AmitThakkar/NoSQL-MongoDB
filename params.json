{
  "name": "Nosql MongoDB",
  "tagline": "This repository contains introduction to NoSQL and MongoDB",
  "body": "# NoSQL  MongoDB\r\n\r\nAgenda:\r\n-------\r\n\r\n* What is NoSQL?\r\n* NoSQL types\r\n* Why NoSQL?\r\n* Why MongoDB?\r\n* Install MongoDB\r\n* SQL terms in MongoDB\r\n* Data Modeling\r\n* Queries\r\n\r\n## What is NoSQL?\r\n`Not only SQL`\r\n\r\n## NoSQL types:\r\n* Document \r\n    1. MongoDB\r\n    2. CouchDB\r\n* Key-Value Pair\r\n    1. Redis\r\n    2. Cassandra\r\n* Graph\r\n    1. Neo4j\r\n    2. HyperGraphDB\r\nPopular NoSQL Database: [http://nosql-database.org/](http://nosql-database.org/).\r\n\r\n## Why NoSQL?\r\n* More scalable then RDBMS\r\n* Can Handle large volumes of Data\r\n* Much faster then RDBMS\r\n![https://raw.githubusercontent.com/AmitThakkar/NoSQL-MongoDB/master/graph.png](https://raw.githubusercontent.com/AmitThakkar/NoSQL-MongoDB/master/images/graph.png)\r\n\r\n## Why is MongoDB?\r\n* Rich query model.\r\n* Full Index Support\r\n* High Performance.\r\n* Vertical + Horizontal scalable.\r\n* Geospatial support.\r\n* Map-Reduce.\r\n* Professional Support by MongoDB.\r\n\r\n## Install MongoDB\r\n[http://docs.mongodb.org/manual/installation/](http://docs.mongodb.org/manual/installation/).\r\n\r\n## SQL terms in MongoDB\r\nSQL          | MongoDB\r\n-------------|---------\r\nDatabase     | Database\r\nTable        | Collection\r\nRow          | Document\r\nColumn       | Field\r\n\r\n## Data Modeling\r\n![https://raw.githubusercontent.com/AmitThakkar/NoSQL-MongoDB/master/data-modeling.png](https://raw.githubusercontent.com/AmitThakkar/NoSQL-MongoDB/master/images/data-modeling.png)\r\n\r\n## Queries\r\n* To start MongoDB shell/client: `mongo`.\r\n* To list database names: `show dbs`.\r\n* To select a database: `use dbName`.\r\n* To list all the collection names: `show tables` or `show collections`.\r\n* To insert a document: `db.collectionName.insert({name:'Amit', age:27})`.\r\n* To update a document: `db.collectionName.update({name:'Amit'}, {name:'Amit Thakkar'})`.\r\n* To upsert a document: `db.collectionName.save({name:'Amit'})`. // Update will happen if _id matched.\r\n* To remove a document: `db.collectionName.remove({name:'Amit'})`.\r\n* To read a document: `db.collectionName.find({name:'Amit'})`.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}